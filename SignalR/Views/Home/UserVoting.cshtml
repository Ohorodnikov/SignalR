@model SignalR.ViewModel.VoteViewModel
@{
    ViewData["Title"] = "UserVouting";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>UserVouting</h2>

@{
    var maxColCount = 5;
}
<div class="alert alert-danger hidden" id="errorPanel">
    You just have voted for this image!
</div>
<table id="imageTable" class="table table-bordered">
    @{
        var counter = 0;
        var imgCount = Model.Images.Count;
    }
    @for (int j = 0; j < imgCount / maxColCount + 1; j++)
    {

        @if (counter >= imgCount)
        {
            continue;
        }
         <tr>
             @for (int i = 0; i < maxColCount; i++)
             {
                 @if (counter >= imgCount)
                 {
                     continue;
                 }
                 else
                 {
                     var image = Model.Images[counter];
                     counter++;
                     <td id="@("image-cell-"+ image.Id)">
                         <div class="elem-val text-center">
                             <img src="data:image / png;base64, @image.Base64" width="100" height="100" />
                         </div>
                         <span id="@("dislike-" + image.Id)" class="remove-img-val">
                             <span class="glyphicon glyphicon-remove pull-left" onclick="addVote(@image.Id, false)"></span>
                         </span>
                         <label id="@("dislikeLabel-" + image.Id)" class="pull-left">@image.DislikesCount</label>
                         <span id="@("like-" + image.Id)" class="remove-img-val">
                             <span class="glyphicon glyphicon-ok pull-right" onclick="addVote(@image.Id, true)"></span>
                         </span>
                         <label id="@("likeLabel-" + image.Id)" class="pull-right">@image.LikesCount</label>
                     </td>
                 }
             }
             
         </tr>
    }
</table>

<script>
    var connection = new signalR.HubConnection('/chat');

    connection.on('Like', function (imageId) {
        var label = document.getElementById("likeLabel-" + imageId);
        var value = parseInt(label.textContent);
        value++;
        label.innerHTML = value;
    });

    connection.on('Dislike', function (imageId) {
        var label = document.getElementById("dislikeLabel-" + imageId);
        var value = parseInt(label.textContent);
        value++;
        label.innerHTML = value;
    });

    function addVote(imgId, like) {
        var model = {
            imgId: imgId,
            userId: @Model.User.Id,
            sessionId: @Model.User.Session.Id,
            like: like
        }
        $.ajax({
            url: 'AddVote/',
            type: 'post',
            dataType: "json",
            data: model,
            success: function (result) {
                if (result.includes("error")) {
                    $('#errorPanel').removeClass('hidden');
                    $('#errorPanel').css("display", "block");
                    $('#errorPanel').fadeOut(5000);
                }
                else {
                    if (like) {
                        connection.invoke('AddLike', "@Model.User.Session.SessionCode", imgId);
                    } else {
                        connection.invoke('AddDislike', "@Model.User.Session.SessionCode", imgId);
                    }
                }
            },
            error: function () {
                $('#errorPanel').removeClass('hidden');
                $('#errorPanel').css("display", "block");
                $('#errorPanel').fadeOut(5000);

            }
        });
    };

    function addDisLike(imgId) {
        var model = {
            imgId: imgId
        }
        $.ajax({
            url: 'AddDislike/',
            type: 'post',
            dataType: "json",
            data: model,
            success: function (result) {
                connection.invoke('AddDislike', imgId);
            }
        });

    };

    connection.start().then(() => connection.invoke('ReRegister', '@Model.User.Session.SessionCode'));

</script>